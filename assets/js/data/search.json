[ { "title": "Asymptotic Analysis", "url": "/posts/Asymptotic-Analysis/", "categories": "Computer Science, Complexity", "tags": "algorithms", "date": "2021-06-29 00:00:00 +0800", "snippet": "This guide serves as a compact summary of notes on asymptotic analysis with emphasis on notation and a complete proof of the master theorem (CLRS does not provide a complete proof). Note that parts of the guide, particularly properties, theorems, certain techniques for the proof use CLRS as a ref..." }, { "title": "ICPC 2014 Asia Regional Problem F (백준 10451)", "url": "/posts/Baekjoon-10451/", "categories": "Computer Science, Baekjoon", "tags": "TAG", "date": "2021-06-05 00:00:00 +0800", "snippet": " This is a simple problem, probably around C for cf div2오늘 여유가 있어서 백준에서 그래프 문제를 풀었는데…일단은 상대적으로 간단하게 풀 수 있는 문제이다. dfs 기본 구현을 통해 사이클을 구하는 문제다. 한 노드가 두 순열 사이클에 포함된다면?문제의 조건상 말이 안 된다. 각 노드는 다른 한 개의 노드로만 연결된다. permutation에는 정의상 중복이 없다. 사이클이 없는 경우?이 문제에서는 사이클이 무조건 존재한다. 존재하지 않는 경우를 만들려고 해도 모든 노드는 다른..." }, { "title": "Intermediate Graph Theory", "url": "/posts/Graph-Theory-Algorithms/", "categories": "Computer Science, Graph Theory", "tags": "algorithms", "date": "2021-05-24 00:00:00 +0800", "snippet": "This is a guide that I made a while ago for graph theory. It doesn’t include any algorithms (will have another post on it) but more of formal definitions and properties of different types of graphs. It will likely be updated &amp;amp; improved in the future. Please also note that this post does n..." }, { "title": "Creating Jekyll Website", "url": "/posts/Creating-Jekyll-Website/", "categories": "Computer Science, Web, Jekyll", "tags": "website", "date": "2021-05-24 00:00:00 +0800", "snippet": "Jekyll is commonly used for creating static websites due to its efficiency and utility, and there are plenty of Jekyll templates availableon GitHub that you can simply fork and edit. In fact, this website was also created using the jekyll-theme-chirpy, one of the more popular themes for building ..." }, { "title": "References &amp; Pointers", "url": "/posts/References-Pointers/", "categories": "Computer Science, C++, References & Pointers", "tags": "syntax", "date": "2021-05-13 00:00:00 +0800", "snippet": "The purpose of this post is to make a clear distinction between references and pointers.int i; int *pi = &amp;amp;i; // The adress of pi is set as the adress of i int i; int &amp;amp;ri = i; // The adress of ri is set as the adress of i // To retrievecout &amp;lt;&amp;lt; *pi cout &amp;lt;&amp;l..." } ]
